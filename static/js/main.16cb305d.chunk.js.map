{"version":3,"sources":["components/Loader/HomePage/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTableRowData/PeopleTableRowData.tsx","components/PeopleTable/PeopleTable.tsx","components/PeopleLoader/PeopleLoader.tsx","components/PeoplePage/PeoplePage.tsx","components/PageNotFound/PageNotFound.tsx","components/NavLinkCustom/NavLinkCustom.tsx","App.tsx","index.tsx"],"names":["HomePage","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","name","sex","to","classNames","PeopleTableRowData","born","died","mother","father","motherName","fatherName","PeopleTable","people","personSlug","useParams","map","findParent","parentName","find","parent","PeopleLoader","useState","setPeople","isLoading","setIsLoading","isError","setIsError","loadPeople","useCallback","peopleFromServer","preparedPeople","useEffect","length","PeoplePage","PageNotFound","NavLinkCustom","title","isActive","App","role","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.16cb305d.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink: FC<Props> = ({ person }) => {\n  const { slug, name, sex } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name || '-'}\n    </Link>\n  );\n};\n","import { FC } from 'react';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PeopleTableRowData: FC<Props> = ({ person }) => {\n  const {\n    sex,\n    born,\n    died,\n    mother,\n    father,\n    motherName,\n    fatherName,\n  } = person;\n\n  return (\n    <>\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother\n          ? (<PersonLink person={mother} />)\n          : (motherName || '-')}\n      </td>\n      <td>\n        {father\n          ? (<PersonLink person={father} />)\n          : (fatherName || '-')}\n      </td>\n    </>\n  );\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { PeopleTableRowData } from '../PeopleTableRowData';\nimport { Person } from '../../types';\n\ninterface Props {\n  people: Person[];\n}\n\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  const { personSlug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={classNames({\n              'has-background-warning': personSlug === person.slug,\n            })}\n          >\n            <PeopleTableRowData person={person} />\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import {\n  useState,\n  useCallback,\n  useEffect,\n} from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\n\nconst findParent = (\n  people: Person[],\n  parentName: string | null,\n): Person | undefined => {\n  return people.find(parent => parent.name === parentName);\n};\n\nexport const PeopleLoader = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const loadPeople = useCallback(async () => {\n    setIsLoading(true);\n\n    try {\n      const peopleFromServer = await getPeople();\n\n      const preparedPeople = peopleFromServer.map(person => ({\n        ...person,\n        mother: findParent(peopleFromServer, person.motherName),\n        father: findParent(peopleFromServer, person.fatherName),\n      }));\n\n      setPeople(preparedPeople);\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    loadPeople();\n  }, [loadPeople]);\n\n  if (isError) {\n    return (\n      <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n        Something went wrong\n      </p>\n    );\n  }\n\n  if (isLoading) {\n    return (\n      <Loader />\n    );\n  }\n\n  if (people.length === 0) {\n    return (\n      <p data-cy=\"noPeopleMessage\">\n        There are no people on the server\n      </p>\n    );\n  }\n\n  return (\n    <PeopleTable people={people} />\n  );\n};\n","import { PeopleLoader } from '../PeopleLoader';\n\nexport const PeoplePage = () => {\n  return (\n    <>\n\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n\n          <PeopleLoader />\n        </div>\n      </div>\n    </>\n  );\n};\n","export const PageNotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ninterface Props {\n  to: string;\n  title: string;\n}\n\nexport const NavLinkCustom: FC<Props> = ({ to, title }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n  >\n    {title}\n  </NavLink>\n);\n","import './App.scss';\nimport {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { HomePage } from './components/Loader/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { PageNotFound } from './components/PageNotFound';\nimport { NavLinkCustom } from './components/NavLinkCustom/NavLinkCustom';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLinkCustom to=\"/\" title=\"Home\" />\n          <NavLinkCustom to=\"/people\" title=\"People\" />\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":personSlug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<PageNotFound />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}